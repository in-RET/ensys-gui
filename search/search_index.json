{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Info</p> <p>If you find some bugs don't hesitate to mail at Hochschule Nordhausen</p> <p></p> <p>The graphical user interface for oemof.solph.</p>"},{"location":"#developed-and-maintained-by","title":"Developed and maintained by","text":""},{"location":"#contact","title":"Contact","text":"<p>Tip</p> <p>Using mail is the best way to get in contact.</p> <p>Thank you!</p> <p>Hochschule Nordhausen Institut f\u00fcr regenerative Energietechnik Weinberghof 4 99734 Nordhausen ensys@hs-nordhausen.de ensys.hs-nordhausen.de</p>"},{"location":"#special-thanks","title":"Special Thanks","text":"<p>We want to thank the open_plan project consortium, which is composed of the Reiner Lemoine Institut (RLI), Deutsche Gesellschaft f\u00fcr Sonnenenergie (DGS) and the Potsdam Institut f\u00fcr Klimafolgenforschung (PIK), for developing the open-plan-tool, which is the basis for our extension.</p>"},{"location":"faq/","title":"FAQ","text":"<p>Warning</p> <p>This is a prototype. Under Construction!</p>"},{"location":"possibilities/","title":"Developer Doc Help","text":"<p>Note</p> <p>Dient der Veranschaulichung ausgew\u00e4hlter M\u00f6glichkeiten</p> <p>Tip</p> <p>Weitere Informationen in folgenden Dokumenationen</p> <ul> <li>mkDocs</li> <li>mkDocs-Material</li> </ul>"},{"location":"possibilities/#heading","title":"Heading","text":"<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. </p>"},{"location":"possibilities/#subsubheading","title":"Subsubheading","text":"<p>Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   </p>"},{"location":"possibilities/#subsubheading_1","title":"Subsubheading","text":"<p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. </p>"},{"location":"possibilities/#subheading","title":"Subheading","text":"<p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis.   </p>"},{"location":"possibilities/#code-and-latex","title":"Code and LaTeX","text":"<pre><code>print(\"hallo welt\")\n\nx: str = \"dingsda\"\n\nif x == \"dingsda\":\n    print(\"Motor aus\")\nelif x == \"ninja\":\n    print(\"Motor an\")\nelse:\n    print(\"Motor m\u00fcde, Motor schlafen\")\n\nreturn xyz\n</code></pre> <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   </p> \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] <p>Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   </p> <pre><code>$$\n\\sum^5_{i=1} x \\cdot y_i = e^x\n$$\n</code></pre> \\[ \\sum^5_{i=1} x \\cdot y_i = e^x \\] <p>Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   </p>"},{"location":"possibilities/#mermaid","title":"Mermaid","text":""},{"location":"possibilities/#pap","title":"PAP","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"possibilities/#sqeuence-diagram","title":"Sqeuence Diagram","text":"<pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"possibilities/#tabs","title":"Tabs","text":"CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"possibilities/#lists-and-task-lists","title":"Lists and Task Lists","text":""},{"location":"possibilities/#lists","title":"Lists","text":"<ol> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis     sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis     nulla. Vivamus a pharetra leo.</p> <ol> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet     quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a     ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet     rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> <ol> <li>Mauris dictum mi lacus</li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol> </li> </ol> </li> </ol>"},{"location":"possibilities/#task-lists","title":"Task lists","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt<ul> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> </ul> </li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"project_overview/","title":"Overview","text":"<p>Info</p> <p>If you find some bugs don't hesitate to mail at Hochschule Nordhausen</p>"},{"location":"project_overview/#short-description","title":"Short description","text":"<p>The 'ensys'-project contains of two main parts. A graphical user interface, which is built with the python package 'Django'  and an api which is built with 'FastAPI'.</p> <p>On our github page, see right corner above, is the code for both parts as one repository downloadable.</p>"},{"location":"project_overview/#folder-structure","title":"Folder structure","text":"<p>Open these an you find a number of folders.</p>"},{"location":"project_overview/#run","title":".run","text":"<p>Configurations for JetBrains PyCharm.</p>"},{"location":"project_overview/#api","title":"api","text":"<p>Subfolder which contains the FastAPI code.</p>"},{"location":"project_overview/#app","title":"app","text":"<p>Subfolder which contains the Django-Webframework Code and templates for the entire Frontend.</p>"},{"location":"project_overview/#docs","title":"docs","text":"<p>Contains these documentation.</p>"},{"location":"project_overview/#proxy","title":"proxy","text":"<p>Configuration files for the proxy used in production.</p>"},{"location":"project_overview/#requirements","title":"requirements","text":"<p>Contains the file with all requirements and the prebuild backend-package.</p>"},{"location":"project_overview/#after-first-start","title":"After first start","text":""},{"location":"project_overview/#venv","title":".venv","text":"<p>Contains the virtual environment for python.  Version 3.11.</p>"},{"location":"project_overview/#data","title":"data","text":"<p>Folder that is automatically created to store simulation data.</p> <p>This folder is also used in Debugging for database and pgadmin files.</p>"},{"location":"release-notes/","title":"Release Notes","text":"<p>Info</p> <p>Under Development</p>"},{"location":"release-notes/#version-02a","title":"Version 0.2a","text":""},{"location":"release-notes/#features","title":"Features","text":"<ul> <li>added support for open energy platform</li> <li>added documentation</li> <li>added two user modes</li> </ul>"},{"location":"release-notes/#fixes","title":"Fixes","text":"<ul> <li>minor fixes</li> <li>major fixes</li> <li>thousand fixes</li> </ul>"},{"location":"release-notes/#version-01a","title":"Version 0.1a","text":"<ul> <li>initial alpha-release</li> </ul>"},{"location":"about/ensys/","title":"About EnSys","text":"<p>Tip</p> <p>for EnSys-infos</p>"},{"location":"about/frontend/","title":"About frontend","text":"<p>Tip</p> <p>for infos</p>"},{"location":"about/inret/","title":"About in.RET","text":"<p>Tip</p> <p>for in.RET-infos</p>"},{"location":"api/","title":"inretensys-fastapi","text":""},{"location":"api/#what-is-it","title":"What is it?","text":"<p>inretensys-fastapi is an api which is based on FastAPI to connect a graphical user interface with the inretensys-backend.</p> <p>This repository is part of the software package \"inretensys-open-plan-gui\" which is a fork of the open_plan-gui. </p>"},{"location":"api/#differences-to-open_plan-gui","title":"Differences to open_plan-gui","text":"<p>This package is the backend of the software package. It runs the interface to simulate und optimize generated energymodels from the graphical user interface.</p> <p>It can run as a standalone interface or as part of an docker compose structure.</p>"},{"location":"api/functions/","title":"Functions","text":""},{"location":"api/functions/#public-functions","title":"Public Functions","text":""},{"location":"api/functions/#url","title":"URL: \"/\"","text":"<p>Generic root-path to render the mainpage. To get an overview of the rendered page see the picture below.</p> <p> </p> Example-GUI for the given API"},{"location":"api/functions/#url-uploadfile","title":"URL: \"/uploadFile\"","text":"<p>This path is used by websites which provide a graphical user interface, like the root path of these API.</p> <p>The python function reads all provided datafiles in and runs the simulations depending on the flag 'docker' which is a radio box on the given gui. (See the picture above.) Listed below is the a code example for the graphical user interface above.</p> <pre><code>&lt;div class=\"row\"&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Upload verschiedener Dateiformate&lt;/h1&gt;\n    &lt;form action=\"/uploadFile\" enctype=\"multipart/form-data\" method=\"post\"&gt;\n      &lt;h5&gt;Daten des Energiesystems&lt;/h5&gt;\n      &lt;div class=\"mb-3\"&gt;\n        &lt;label for=\"datafile\" class=\"form-label\"&gt;Konfigurationsdatei&lt;/label&gt;\n        &lt;input class=\"form-control\" name=\"datafiles\" type=\"file\" id=\"datafile\" multiple=\"multiple\"&gt;&lt;br /&gt;\n        &lt;div onchange=toggle\\_login\\_form()&gt;\n          &lt;h5&gt;Ausf\u00fchrungsmethode&lt;/h5&gt;\n          &lt;div class=\"form-check\"&gt;\n            &lt;label class=\"form-check-label\" for=\"docker\"&gt;Run with Docker&lt;/label&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"docker\" id=\"docker\" value=\"docker\" checked&gt;\n          &lt;/div&gt;\n          &lt;div class=\"form-check\"&gt;\n            &lt;label class=\"form-check-label\" for=\"ssh\"&gt;Run with SSH&lt;/label&gt;\n            &lt;input class=\"form-check-input\" type=\"radio\" name=\"docker\" id=\"ssh\" value=\"ssh\"&gt; \n          &lt;/div&gt;&lt;br/&gt;\n          &lt;div class=\"mb-3 row\" id=\"loginform\" hidden&gt;\n            &lt;h5&gt;Logindaten Universit\u00e4tsrechenzentrum&lt;/h5&gt;\n            &lt;div   class=\"col\"&gt;\n              &lt;label for=\"username\" class=\"form-label\"&gt;Username&lt;/label&gt;\n              &lt;input type=\"username\" class=\"form-control\" name=\"username\" id=\"username\" placeholder=\"Nutzername\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"col\"&gt;\n              &lt;label for=\"password\" class=\"form-label\"&gt;Email address&lt;/label&gt;\n              &lt;input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\"&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;&lt;br /&gt;\n        &lt;button class=\"btn btn-outline-success form-control\" type=\"submit\"&gt;Run Simulation&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/form&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>Note</p> <p>The submitted file can be a generated binary or json file. Therefore the binary file must be in binary-encoding and the JSON-file as regular utf-8 encoded file.</p>"},{"location":"api/functions/#url-uploadjson","title":"URL: \"/uploadJson\"","text":"<p>This path is used the send post-requests where the energysystem is an json-formatted string as data of the request.</p> <p>The python function wraps all given data to the private function 'run_simulation(..)' and returns the generated website with a list of foldernames, which are the current working directories or a HTTPException. All created folders and their names are returned as a Jinja2-Template which is based on the template from the generic path.</p> <p>Note</p> <p>Every request create one workingdirectory for an energysystem.  It is not possible to submit more than one energysystem within one request.</p>"},{"location":"api/functions/#private-functions","title":"Private Functions","text":""},{"location":"api/functions/#generate_random_folder","title":"generate_random_folder()","text":"<p><pre><code>import uuid\n\ndef generate_random_folder():\n    return str(uuid.uuid4().hex)\n</code></pre> This is a simple helper function to generate an uuid in hex to name and later create folders as workingdirectory. uuid is used to guarantee a unique name.</p>"},{"location":"api/functions/#run_simulation","title":"run_simulation(..)","text":""},{"location":"api/functions/#overview","title":"Overview","text":"<p>The function 'run_simulation' creates all needed workingdirectories - locally or external, creates the given docker-containers with all arguments to run or upload the data to the UniRZ and create a startscript for the user to start solving all submitted energysystems at once.</p> <p>Note</p> <p>UniRZ = Universit\u00e4tsrechenzentrum Ilmenau</p>"},{"location":"api/functions/#deep-dive","title":"Deep Dive","text":"<p>From the functions above (\"uploadFile\" and \"uploadJson\") given data are tuples.  These tuples contains the filedata and the filetype.</p> <p>To create Containers or upload all data it is necessary to loop through these inputdata.</p> <pre><code>for datafile, ftype in input:\n    ...\n</code></pre> <p>At this point the algorithm has two variables, a datafile and the filetype of these datafile. The not given path or name for the working directory is now created by the function \"generate_random_folder\" from above.</p> <p>The graph below shows the following steps of the code.</p> <pre><code>graph TD\n  A[Start, all data, filetypes and workingdirectory names given] --&gt; B{Run with Docker?};\n  B --&gt; |Yes| C[create local workingdirectory];\n  C --&gt; D[write energysystem-data into a configurationfile];\n  D --&gt; E{check if docker-image exists};\n  E --&gt; |Yes| F[start docker container with given arguments];\n  E --&gt; |No| G[raise HTTPException];\n  F --&gt; H[return HTTPTemplate];\n  B --&gt; |No| I{check if auth-data is given};\n  I --&gt; |Yes| J[build jobscript];\n  J --&gt; O[build startscript];\n  O --&gt; K[Upload data via SFTP];\n  K --&gt; L[return HTTPTemplate];\n  I --&gt; |No| M[raise HTTPException]</code></pre> <p>If the Data is written to the UniRZ the user must start the given script by his own at the UniRZ. This is possible with the job submissions commands which are documented at this Website.</p>"},{"location":"api/python/","title":"Usage with Python","text":""},{"location":"api/python/#using-within-python-script","title":"Using within Python-Script","text":"<p>If you want to submit an energysystem from an external script, like a Website based on the Django-Framework, its possible with the python-request-package.</p> <p>Therefore its recommend to call the function \"/uploadJson\". An simple example is given below.</p> <pre><code>INRETENSYS_API_HOST = \"http://localhost:8000\"\n\nrequests.post(\n    url=INRETENSYS_API_HOST+\"/uploadJson/\", \n    json=inret_em.json(), \n    params={'username': '', 'password': '', 'docker': True}\n)\n</code></pre>"},{"location":"api/python/#parameters","title":"Parameters","text":"<p>JSON: Contains the json-data from the energysystem, in the example the object from the class \"InRetEnsysModel\" is named \"inret_em\".</p> <p>PARAMS: Containts a dictionary with three necessary arguments - Username: The Auth-Username for the \"Universit\u00e4tsrechenzentrum Ilmenau\" - Password: The Auth-Password for the \"Universit\u00e4tsrechenzentrum Ilmenau\" - Docker: A Flag, if it is set to True, the Simulations are solve within docker instances and the arguments given before are not required</p>"},{"location":"api/release-notes/","title":"Release Notes","text":""},{"location":"api/release-notes/#002-pre-release-beta","title":"0.02 Pre-Release (beta)","text":""},{"location":"api/release-notes/#features","title":"Features","text":"<ul> <li>Support configurationsfiles in two fileformats, JSON or Binary</li> <li>Support to directly submit data via JSON-Requests</li> <li>Automically solve energysystem via docker</li> <li>Added support for upload to the \"Universit\u00e4tsrechenzentrum Ilmenau\" (login data is required!)</li> <li>Support uploading multiple Files at once also with both filetypes mixed</li> </ul>"},{"location":"api/release-notes/#fixes","title":"Fixes","text":"<ul> <li>Fixed loginmask for the UniRZ</li> <li>Splitted solving via docker / ssh in two files for better readability</li> <li>added constants.py for Filetypes, SSH-Addresses, Docker-Imagenames etc.</li> </ul>"},{"location":"api/release-notes/#001-pre-release-alpha","title":"0.01 Pre-Release (alpha)","text":"<p>First implementation.</p>"},{"location":"getting_started/first_steps/","title":"First Steps","text":"<p>Info</p> <p>If you find some bugs don't hesitate to mail at Hochschule Nordhausen</p>"},{"location":"getting_started/first_steps/#start","title":"Start","text":"<p>After you visit the website the following page appears. This is our start.</p> <p></p>"},{"location":"getting_started/first_steps/#registration","title":"Registration","text":"<p>Start the registration click the blue \"Sign Up\"-Button at the top right corner and fill in the following information: your name, email address, username and password. Finally, do not forget to read and accept the privacy statement. You should receive an email with a link to confirm the account creation.</p> <p></p> <p>After the sign up you will recieve a activation-mail with further information to activate your account. If the activation is done you can log in and see the following dashboard.</p>"},{"location":"getting_started/first_steps/#dashboard","title":"Dashboard","text":"<p>As new user you doesn't find any project and scenarios. How you create and simulate is part of the next step.</p> <p>The dashboard shows a navigation bar on top. On the right you can find a list of links and the dropdown menu for managing your account. On the left is the logo from \"EnSys\" which is also the homebutton.</p> <p>On the bottom menubar you can find various links to information about the developer, our github repository, use cases which you can use to create scenarios, a short FAQ and legal notices like the imprint, privacy and license of the software.</p>"},{"location":"getting_started/first_steps/#create-project-scenario-energysystemmodell-and-simulate","title":"Create Project, Scenario, Energysystemmodell and Simulate","text":"Create ProjectCreate ScenarioModelling the EnergysystemSet the constraintsStart the SimulationShow the results <p>Warning</p> <p>Under Construction</p> Create Project MenuCreate Project Form <p> </p> <p> </p> <p>Warning</p> <p>Under Construction</p> <p> </p> <p>Warning</p> <p>Under Construction</p> Before ModellingAfter Modelling <p> </p> <p> </p> <p>Warning</p> <p>Under Construction</p> <p> </p> <p>Warning</p> <p>Under Construction</p> Before SimulationAfter Simulation <p> </p> <p> </p> <p>Warning</p> <p>Under Construction</p> <p> </p>"},{"location":"getting_started/installation/","title":"Installation","text":"<p>Info</p> <p>If you find some bugs don't hesitate to mail at Hochschule Nordhausen</p> <p>Warning</p> <p>Not tested for Windows.</p>"},{"location":"getting_started/installation/#standalone","title":"Standalone","text":"<p>FastAPI: Documentation Django Framework: Documentation</p>"},{"location":"getting_started/installation/#example-env-file","title":"Example .env-File","text":"<pre><code># postgres settings\nPOSTGRES_DB=EnSys\nPOSTGRES_USER=ensys_pg\nPOSTGRES_PASSWORD=ensys_pg\nPOSTGRES_HOST=db\nPOSTGRES_PORT=5432\n\n# pgadmin settings\nPGADMIN_DEFAULT_EMAIL=admin@hs-nordhausen.de\nPGADMIN_DEFAULT_PASSWORD=rootroot\nPGADMIN_PORT=9005\n\n# django settings\nDJANGO_PORT=20001\nDJANGO_DEBUG=False\n\nSQL_ENGINE=django.db.backends.postgresql\nSQL_DATABASE=$POSTGRES_DB\nSQL_USER=$POSTGRES_USER\nSQL_PASSWORD=$POSTGRES_PASSWORD\nSQL_HOST=$POSTGRES_HOST\nSQL_PORT=$POSTGRES_PORT\n\nEMAIL_SENDER=&lt;mail adress&gt;\nEMAIL_HOST_IP=&lt;mail server&gt;\nEMAIL_HOST_USER=&lt;mail adress user&gt;\nEMAIL_HOST_PASSWORD=&lt;mail adress password&gt;\n\n# api settings\nLOCAL_WORKDIR=D:\\Github\\ensys-gui\nLOCAL_DATADIR=D:\\Github\\ensys-gui\\data\\simulations\nGUROBI_LICENSE_FILE_PATH=D:\\Github\\ensys-gui\\gurobi_mvs.lic\n\n# proxy settings\nPROXY_PORT=9004\n</code></pre>"},{"location":"getting_started/installation/#using-system-tools","title":"Using System tools","text":"<ol> <li>Install<ul> <li>PostgreSQL </li> <li>git</li> </ul> <p>Question</p> <p>Geht das auch ohne Solver?</p> <ul> <li>a Solver you want (cbc, gurobi)</li> <li>Docker</li> </ul> </li> <li>Download the Github Repository<ul> <li>Navigate to your designated project folder</li> <li>Download the repository for the website using <pre><code>git clone https://github.com/in-RET/ensys-gui.git\n</code></pre></li> <li>Download the repository for external simulation images using <pre><code>git clone https://github.com/in-RET/ensys-backend.git\n</code></pre></li> </ul> </li> <li>Navigate into the backend folder (<code>cd ensys-backend</code>)</li> <li>Run the build script<ul> <li>on Mac/Linux: <code>bash build.sh</code></li> <li>on Windows:    <pre><code>docker build -t inretensys:0.2a7-gurobi -f .\\production\\gurobi\\dockerfile .\ndocker build -t inretensys:0.2a7-cbc -f .\\production\\cbc\\dockerfile .\n</code></pre></li> </ul> </li> <li>Navigate into the ensys-gui folder (<code>cd ensys-gui</code>)</li> <li>Create a Virtual Environment     <pre><code>python3 -m venv .venv\n</code></pre></li> <li>Start FastAPI     <pre><code>~: cd api    \napi: uvicorn api.api:app --host 0.0.0.0 --port 9004\n</code></pre></li> <li>Start Django     <pre><code>~: cd app\napp: python manage.py collectstatic\napp: python manage.py migrate\napp: python manage.py loaddata 'fixtures/fixture.json'\napp: python manage.py runserver 0.0.0.0:9004\n</code></pre></li> <li>Open your Browser and visit Local Website</li> <li>You can then login with <code>testUser</code> and <code>ASas12,.</code> or create your own account</li> </ol>"},{"location":"getting_started/installation/#using-pycharm","title":"Using PyCharm","text":"<ol> <li>Follow steps 1 to 4</li> <li>Open Project in PyCharm</li> <li>Use the Run-Configurations which are saved in the project folder<ul> <li>\"Backend.run.xml\" for the FastAPI-Backend</li> <li>\"Frontend.run.xml\" for the Django-Frontend</li> <li>\"Offline.run.xml\" Compound-run for Backend and Frontend</li> <li>\"compose.run.xml\" for Docker Compose deployment</li> </ul> </li> <li>Run the configuration \"Offline\"</li> <li>Open your Browser and visit Local Website</li> <li>You can then login with <code>testUser</code> and <code>ASas12,.</code> or create your own account</li> </ol>"},{"location":"getting_started/installation/#docker","title":"Docker","text":"<ol> <li>Follow steps 1 to 4</li> <li>Install Docker</li> <li>Navigate in the project folder</li> <li>Type <pre><code>docker compose up\n</code></pre></li> <li>Wait until completion</li> <li>Open your Browser and visit Local Website</li> <li>You can then login with <code>testUser</code> and <code>ASas12,.</code> or create your own account</li> </ol>"}]}